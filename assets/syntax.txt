separators: "()[]{},;:/*+-";

Node { debug_id: 1000, name: "brackets",
    rule: SeparatedBy { optional: true, allow_trail: false,
        rule: ? ["[", {":", ..separators}, "]", ],
        by: w!
    }
};

Node { debug_id: 2000, name: "path",
    rule: [? "::" -> "root",
        SeparatedBy { optional: false, allow_trail: true,
            rule: ..separators -> "name",
            by: "::"
        },
    ]
};

Node { debug_id: 3000, name: "arg",
    rule: [@"brackets", @"path", @"brackets", ? @"repeated_arguments"]
};

Node { debug_id: 4000, name: "arguments",
    rule: ["(", w?,
        SeparatedBy { optional: true, allow_trail: true,
            rule: {
                $_ -> "number",
                Text { allow_empty: true, property: None },
                @"arguments", @"member_lambda", @"lambda", @"arg"
            },
            by: [",", w!]
        },
        w?, ")"]
};

Node { debug_id: 5000, name: "repeated_arguments",
    rule: Repeat { optional: false, rule: @"arguments" }
};

Node { debug_id: 6000, name: "comment",
    rule: [w?, "//",
        UntilAny { any_characters: "\n", optional: true, property: None }
    ]
};

Node { debug_id: 7000, name: "lambda",
    rule: [ w?, ? ["fn", w?],
        ..separators? -> "name",
        w?, @"brackets", @"repeated_arguments", w!, "->", w!, @"arg", w?
    ]
};

Node { debug_id: 8000, name: "fn",
    rule: [? ["pub", w?], @"lambda", ";", w?, ? @"comment"]
};

Node { debug_id: 9000, name: "use",
    rule: [w?, ? ["pub", w?], "use", w!, @"path", ? "*", ";"]
};

Node { debug_id: 10000, name: "module",
    rule: [w?, ? ["pub", w?], "mod", w!, ..separators -> "name", ";"]
};

Node { debug_id: 11000, name: "member_lambda",
    rule: [@"arg", w?, ":", w!, @"arg"]
};

Node { debug_id: 12000, name: "member",
    rule: [@"member_lambda", ";"]
};

Node { debug_id: 13000, name: "line_rule",
    rule: {@"comment", @"use", @"module", @"member", @"fn"}
};

Lines { debug_id: 14000, rule: line_rule }
